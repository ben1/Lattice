.SDLBasePath        = 'External/SDL/2.26.2'
.SDLIncludePaths = ' "/external:I$SDLBasePath$/include"'
{
    .ProjectName        = 'SDL'
    .ProjectPath        = '$SDLBasePath$'

    // Target/Compiler specific options
    .SDLOptions_x64     = [
                            .SDLCompilerOptions = ' -O2'        // Compile with optimizations even in debug to improve performance
                          ]

    // Library
    //--------------------------------------------------------------------------
    .ProjectConfigs = {}
    ForEach( .BuildConfig in .BuildConfigs )
    {
        Using( .BuildConfig )

        .OutputBase + '\$Platform$-$BuildConfigName$'

        Using( ."SDLOptions_$Platform$" )

        // Static Library
        ObjectList( '$ProjectName$-Lib-$Platform$-$BuildConfigName$' )
        {
            // Input
            .CompilerInputPathRecurse = false
            .CompilerInputPattern       = { '*.c', '*.cpp' }
            .CompilerInputPath          = { '$SDLBasePath$/src',
                                            '$SDLBasePath$/src/atomic',
                                            '$SDLBasePath$/src/audio',
                                            '$SDLBasePath$/src/audio/directsound',
                                            '$SDLBasePath$/src/audio/disk',
                                            '$SDLBasePath$/src/audio/dummy',
                                            '$SDLBasePath$/src/audio/wasapi',
                                            '$SDLBasePath$/src/audio/winmm',
                                            '$SDLBasePath$/src/core/windows',
                                            '$SDLBasePath$/src/cpuinfo',
                                            '$SDLBasePath$/src/file',
                                            '$SDLBasePath$/src/filesystem/windows',
                                            '$SDLBasePath$/src/haptic',
                                            '$SDLBasePath$/src/haptic/dummy',
                                            '$SDLBasePath$/src/haptic/windows',
                                            '$SDLBasePath$/src/hidapi',
                                            '$SDLBasePath$/src/joystick',
                                            '$SDLBasePath$/src/joystick/dummy',
                                            '$SDLBasePath$/src/joystick/hidapi',
                                            '$SDLBasePath$/src/joystick/virtual',
                                            '$SDLBasePath$/src/joystick/windows',
                                            '$SDLBasePath$/src/libm',
                                            '$SDLBasePath$/src/loadso/windows',
                                            '$SDLBasePath$/src/locale',
                                            '$SDLBasePath$/src/locale/windows',
                                            '$SDLBasePath$/src/main/windows',
                                            '$SDLBasePath$/src/misc',
                                            '$SDLBasePath$/src/misc/windows',
                                            '$SDLBasePath$/src/power',
                                            '$SDLBasePath$/src/power/windows',
                                            '$SDLBasePath$/src/render',
                                            '$SDLBasePath$/src/render/direct3d',
                                            '$SDLBasePath$/src/render/opengl',
                                            '$SDLBasePath$/src/render/opengles2',
                                            '$SDLBasePath$/src/render/software',
                                            '$SDLBasePath$/src/sensor',
                                            '$SDLBasePath$/src/sensor/dummy',
                                            '$SDLBasePath$/src/sensor/windows',
                                            '$SDLBasePath$/src/stdlib',
                                            '$SDLBasePath$/src/thread',
                                            '$SDLBasePath$/src/thread/windows',
                                            '$SDLBasePath$/src/timer',
                                            '$SDLBasePath$/src/timer/windows',
                                            '$SDLBasePath$/src/video',
                                            '$SDLBasePath$/src/video/dummy',
                                            '$SDLBasePath$/src/video/windows',
                                            '$SDLBasePath$/src/video/yuv2rgb' }

            .CompilerInputFiles         = { '$SDLBasePath$/src/events/SDL_clipboardevents.c',
                                            '$SDLBasePath$/src/events/SDL_displayevents.c',
                                            '$SDLBasePath$/src/events/SDL_dropevents.c',
                                            '$SDLBasePath$/src/events/SDL_events.c',
                                            '$SDLBasePath$/src/events/SDL_gesture.c',
                                            '$SDLBasePath$/src/events/SDL_keyboard.c',
                                            '$SDLBasePath$/src/events/SDL_mouse.c',
                                            '$SDLBasePath$/src/events/SDL_quit.c',
                                            '$SDLBasePath$/src/events/SDL_touch.c',
                                            '$SDLBasePath$/src/events/SDL_windowevents.c',
                                            '$SDLBasePath$/src/render/direct3d11/SDL_render_d3d11.c',
                                            '$SDLBasePath$/src/render/direct3d11/SDL_shaders_d3d11.c',
                                            '$SDLBasePath$/src/render/direct3d12/SDL_render_d3d12.c',
                                            '$SDLBasePath$/src/render/direct3d12/SDL_shaders_d3d12.c',
                                            '$SDLBasePath$/src/thread/generic/SDL_syscond.c' }
            // Options
            .CompilerOptions            = .CompilerOptionsC
                                        + .SDLIncludePaths
                                        + .SDLCompilerOptions

                                        #if __WINDOWS__
                                            // Remove warnings and warnings as errors
                                            - ' /Wall'
                                            - ' /WX'

                                            // Remove flags that disable opimizations
                                            - ' /Od'
                                            - ' /RTC1'

                                            // Disable clang-cl static analysis if enabled for this config
                                            // (we won't fix warnings in 3rd party code)
                                            - ' --analyze'
                                        #else
                                            - ' -Wall'
                                            - ' -Werror'
                                            - ' -Wfatal-errors'
                                            - ' -Wextra'
                                            - ' -Wshadow'
                                            - ' -Weverything'

                                            - ' -O0'
                                        #endif

            // Output
            .CompilerOutputPath         = '$OutputBase$/External/$ProjectName$/'
        }
        Alias( '$ProjectName$-$Platform$-$BuildConfigName$' ) { .Targets = '$ProjectName$-Lib-$Platform$-$BuildConfigName$' }

        #if __WINDOWS__
            .ProjectConfig              = [ Using( .'Project_$Platform$_$BuildConfigName$' ) .Target = '$ProjectName$-$Platform$-$BuildConfigName$' ]
            ^ProjectConfigs             + .ProjectConfig
        #endif
    }

    // Aliases
    //--------------------------------------------------------------------------
    CreateCommonAliases( .ProjectName )

    // Visual Studio Project Generation
    //--------------------------------------------------------------------------
    #if __WINDOWS__
        .ExtraOptions   = [
                            .ProjectFiles = 'External/SDL/SDL.bff'
                          ]
        CreateVCXProject_Lib( .ProjectName, .ProjectPath, .ProjectConfigs, .ExtraOptions )
    #endif
}
