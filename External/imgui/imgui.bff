// imgui
//------------------------------------------------------------------------------
.imguiBasePath        = 'External/imgui/docking-c191faf'
.imguiIncludePaths    = ' "-I$imguiBasePath$"'
                      + ' "-I$imguiBasePath$/backends"'
                      + '$SDLIncludePaths$'
{
    .ProjectName        = 'imgui'
    .ProjectPath        = '$imguiBasePath$'

    // Target/Compiler specific options
    .imguiOptions_x64     = [
                                .imguiCompilerOptions = ' -O2'        // Compile with optimizations even in debug to improve performance
                            ]

    // Library
    //--------------------------------------------------------------------------
    .ProjectConfigs = {}
    ForEach( .BuildConfig in .BuildConfigs )
    {
        Using( .BuildConfig )

        .OutputBase + '\$Platform$-$BuildConfigName$'

        Using( ."imguiOptions_$Platform$" )

        // Static Library
        ObjectList( '$ProjectName$-Lib-$Platform$-$BuildConfigName$' )
        {
            // Input - Only build specific files we use
            .CompilerInputPath          = {
                                            '$imguiBasePath$'
                                          }
            .CompilerInputPathRecurse = false             
            .CompilerInputFiles         = {
                                            '$imguiBasePath$/backends/imgui_impl_sdl.cpp',
                                            '$imguiBasePath$/backends/imgui_impl_opengl3.cpp',
                                            '$imguiBasePath$/misc/freetype/imgui_freetype.cpp'
                                          }
            // Options
            .CompilerOptions            = .CompilerOptionsC
                                        + .imguiIncludePaths
                                        + .FreeTypeIncludePaths
                                        + .imguiCompilerOptions

                                        #if __WINDOWS__
                                            // Remove warnings and warnings as errors
                                            - ' /Wall'
                                            - ' /WX'

                                            // Remove flags that disable opimizations
                                            - ' /Od'
                                            - ' /RTC1'

                                            // Disable clang-cl static analysis if enabled for this config
                                            // (we won't fix warnings in 3rd party code)
                                            - ' --analyze'
                                        #else
                                            - ' -Wall'
                                            - ' -Werror'
                                            - ' -Wfatal-errors'
                                            - ' -Wextra'
                                            - ' -Wshadow'
                                            - ' -Weverything'

                                            - ' -O0'
                                        #endif

            // Output
            .CompilerOutputPath         = '$OutputBase$/External/$ProjectName$/'
        }
        Alias( '$ProjectName$-$Platform$-$BuildConfigName$' ) { .Targets = '$ProjectName$-Lib-$Platform$-$BuildConfigName$' }

        #if __WINDOWS__
            .ProjectConfig              = [ Using( .'Project_$Platform$_$BuildConfigName$' ) .Target = '$ProjectName$-$Platform$-$BuildConfigName$' ]
            ^ProjectConfigs             + .ProjectConfig
        #endif
    }

    // Aliases
    //--------------------------------------------------------------------------
    CreateCommonAliases( .ProjectName )

    // Visual Studio Project Generation
    //--------------------------------------------------------------------------
    #if __WINDOWS__
        .ExtraOptions   = [
                            .ProjectFiles = 'External/imgui/imgui.bff'
                          ]
        CreateVCXProject_Lib( .ProjectName, .ProjectPath, .ProjectConfigs, .ExtraOptions )
    #endif

}
