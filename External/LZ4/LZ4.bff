// LZ4
//------------------------------------------------------------------------------
.LZ4BasePath        = 'External/LZ4/lz4-1.9.3/lib'
.LZ4IncludePaths    = ' "-I$LZ4BasePath$"'
{
    .ProjectName        = 'LZ4'
    .ProjectPath        = '$LZ4BasePath$'

    // Target/Compiler specific options
    .LZ4Options_x64     = [
                            .LZ4CompilerOptions = ' /wd6239'    // (<non-zero constant> && <expression>) always evaluates to the result of <expression>.  Did you intend to use the bitwise-and operator?
                                                + ' /wd6240'    // (<expression> && <non-zero constant>) always evaluates to the result of <expression>.  Did you intend to use the bitwise-and operator?
                                                + ' /wd6262'    // Function uses '%u' bytes of stack:  exceeds /analyze:stacksize '16384'.  Consider moving some data to heap.
                                                + ' /wd6326'    // Potential comparison of a constant with another constant.
                                                + ' /wd6385'    // Reading invalid data from 'v':  the readable size is '_Old_5`2' bytes, but '4' bytes may be read.: Lines: 427, 430, 432, 436, 437, 438, 439
                                                + ' /wd28251'   // warning C28251: Inconsistent annotation for '_setjmp': this instance has no annotations. See <no file>(0).
                                                + ' /wd26051'   // Function with irreducible control flow graph.

                                                + ' -O2'        // Compile with optimizations even in debug to improve performance
                          ]
    // Library
    //--------------------------------------------------------------------------
    .ProjectConfigs = {}
    ForEach( .BuildConfig in .BuildConfigs )
    {
        Using( .BuildConfig )

        .OutputBase + '\$Platform$-$BuildConfigName$'

        Using( ."LZ4Options_$Platform$" )

        // Static Library
        ObjectList( '$ProjectName$-Lib-$Platform$-$BuildConfigName$' )
        {
            // Input - Only build specific files we use
            .CompilerInputFiles         = {
                                            '$LZ4BasePath$\lz4.c'
                                            '$LZ4BasePath$\lz4hc.c'
                                            '$LZ4BasePath$\xxhash.c'
                                          }

            // Options
            .CompilerOptions            = .CompilerOptionsC
                                        + .LZ4IncludePaths
                                        + .LZ4CompilerOptions

                                        #if __WINDOWS__
                                            // Remove flags that disable opimizations
                                            - ' /Od'
                                            - ' /RTC1'

                                            // Disable clang-cl static analysis if enabled for this config
                                            // (we won't fix warnings in 3rd party code)
                                            - ' --analyze'
                                        #else
                                            - ' -O0'
                                        #endif
                                        
                                        - ' -Wall'
                                        - ' -Werror'
                                        - ' -Wfatal-errors'
                                        - ' -Wextra'
                                        - ' -Wshadow'
                                        - ' -Weverything'

            // Output
            .CompilerOutputPath         = '$OutputBase$/External/$ProjectName$/'
        }
        Alias( '$ProjectName$-$Platform$-$BuildConfigName$' ) { .Targets = '$ProjectName$-Lib-$Platform$-$BuildConfigName$' }

        #if __WINDOWS__
            .ProjectConfig              = [ Using( .'Project_$Platform$_$BuildConfigName$' ) .Target = '$ProjectName$-$Platform$-$BuildConfigName$' ]
            ^ProjectConfigs             + .ProjectConfig
        #endif
    }

    // Aliases
    //--------------------------------------------------------------------------
    CreateCommonAliases( .ProjectName )

    // Visual Studio Project Generation
    //--------------------------------------------------------------------------
    #if __WINDOWS__
        .ExtraOptions   = [
                            .ProjectFiles = 'External/LZ4/LZ4.bff'
                          ]
        CreateVCXProject_Lib( .ProjectName, .ProjectPath, .ProjectConfigs, .ExtraOptions )
    #endif
}
