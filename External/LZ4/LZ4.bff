// LZ4
//------------------------------------------------------------------------------
.LZ4BasePath        = 'External/LZ4/lz4-1.9.3/lib'
.LZ4IncludePaths    = ' "-I$LZ4BasePath$"'
{
    .ProjectName        = 'LZ4'
    .ProjectPath        = '$LZ4BasePath$'

    // Target/Compiler specific options
    .LZ4Options_x64     = [
                            .LZ4CompilerOptions = ' -O2'        // Compile with optimizations even in debug to improve performance
                          ]
    // Library
    //--------------------------------------------------------------------------
    .ProjectConfigs = {}
    ForEach( .BuildConfig in .BuildConfigs )
    {
        Using( .BuildConfig )

        .OutputBase + '\$Platform$-$BuildConfigName$'

        Using( ."LZ4Options_$Platform$" )

        // Static Library
        ObjectList( '$ProjectName$-Lib-$Platform$-$BuildConfigName$' )
        {
            // Input - Only build specific files we use
            .CompilerInputFiles         = {
                                            '$LZ4BasePath$\lz4.c'
                                            '$LZ4BasePath$\lz4hc.c'
                                            '$LZ4BasePath$\xxhash.c'
                                          }

            // Options
            .CompilerOptions            = .CompilerOptionsC
                                        + .LZ4IncludePaths
                                        + .LZ4CompilerOptions

                                        #if __WINDOWS__
                                            // Remove warnings and warnings as errors
                                            - ' /Wall'
                                            - ' /WX'

                                            // Remove flags that disable opimizations
                                            - ' /Od'
                                            - ' /RTC1'

                                            // Disable clang-cl static analysis if enabled for this config
                                            // (we won't fix warnings in 3rd party code)
                                            - ' --analyze'
                                        #else
                                            - ' -Wall'
                                            - ' -Werror'
                                            - ' -Wfatal-errors'
                                            - ' -Wextra'
                                            - ' -Wshadow'
                                            - ' -Weverything'

                                            - ' -O0'
                                        #endif

            // Output
            .CompilerOutputPath         = '$OutputBase$/External/$ProjectName$/'
        }
        Alias( '$ProjectName$-$Platform$-$BuildConfigName$' ) { .Targets = '$ProjectName$-Lib-$Platform$-$BuildConfigName$' }

        #if __WINDOWS__
            .ProjectConfig              = [ Using( .'Project_$Platform$_$BuildConfigName$' ) .Target = '$ProjectName$-$Platform$-$BuildConfigName$' ]
            ^ProjectConfigs             + .ProjectConfig
        #endif
    }

    // Aliases
    //--------------------------------------------------------------------------
    CreateCommonAliases( .ProjectName )

    // Visual Studio Project Generation
    //--------------------------------------------------------------------------
    #if __WINDOWS__
        .ExtraOptions   = [
                            .ProjectFiles = 'External/LZ4/LZ4.bff'
                          ]
        CreateVCXProject_Lib( .ProjectName, .ProjectPath, .ProjectConfigs, .ExtraOptions )
    #endif
}
