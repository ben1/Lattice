{
    .ProjectName        = 'Sim'
    .ProjectPath        = 'Code/Sim'

    // Library
    //--------------------------------------------------------------------------
    .ProjectConfigs = {}
    ForEach( .BuildConfig in .BuildConfigs )
    {
        Using( .BuildConfig )
        .OutputBase + '/$Platform$-$BuildConfigName$'

        Unity( '$ProjectName$-Unity-$Platform$-$BuildConfigName$' )
        {
            .UnityInputPath             = '$ProjectPath$/'
            .UnityOutputPath            = '$OutputBase$/$ProjectPath$/'
            .UnityOutputPattern         = '$ProjectName$_Unity*.cpp'
        }

        ObjectList( '$ProjectName$-Lib-$Platform$-$BuildConfigName$' )
        {
            // Input (Unity)
            .CompilerInputUnity         = '$ProjectName$-Unity-$Platform$-$BuildConfigName$'

            // Output
            .CompilerOutputPath         = '$OutputBase$/$ProjectPath$/'

            .CompilerOptions            + ' "-ICode"'
                                        + '$FastBuildIncludes$'
        }

        Alias( '$ProjectName$-$Platform$-$BuildConfigName$' ) { .Targets = '$ProjectName$-Lib-$Platform$-$BuildConfigName$' }

        #if __WINDOWS__
            .ProjectConfig              = [ Using( .'Project_$Platform$_$BuildConfigName$' ) .Target = '$ProjectName$-$Platform$-$BuildConfigName$' ]
            ^ProjectConfigs             + .ProjectConfig
        #endif
    }

    // Aliases
    //--------------------------------------------------------------------------
    CreateCommonAliases( .ProjectName )

    // Visual Studio Project Generation
    //--------------------------------------------------------------------------
    #if __WINDOWS__
        .ExtraOptions = [ .ProjectFiles = 'Code/Sim/Sim.bff' ]
        CreateVCXProject_Lib( .ProjectName, .ProjectPath, .ProjectConfigs, .ExtraOptions )
    #endif
}
